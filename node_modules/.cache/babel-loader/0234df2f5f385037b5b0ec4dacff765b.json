{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.ProvidedRequiredArgumentsOnDirectivesRule = ProvidedRequiredArgumentsOnDirectivesRule;\nexports.ProvidedRequiredArgumentsRule = ProvidedRequiredArgumentsRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _keyMap = require('../../jsutils/keyMap.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _directives = require('../../type/directives.js');\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\n\n\nfunction ProvidedRequiredArgumentsRule(context) {\n  return { // eslint-disable-next-line new-cap\n    ...ProvidedRequiredArgumentsOnDirectivesRule(context),\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        }\n\n        const providedArgs = new Set( // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n        /* c8 ignore next */\n        (_fieldNode$arguments = fieldNode.arguments) === null || _fieldNode$arguments === void 0 ? void 0 : _fieldNode$arguments.map(arg => arg.name.value));\n\n        for (const argDef of fieldDef.args) {\n          if (!providedArgs.has(argDef.name) && (0, _definition.isRequiredArgument)(argDef)) {\n            const argTypeStr = (0, _inspect.inspect)(argDef.type);\n            context.reportError(new _GraphQLError.GraphQLError(`Field \"${fieldDef.name}\" argument \"${argDef.name}\" of type \"${argTypeStr}\" is required, but it was not provided.`, {\n              nodes: fieldNode\n            }));\n          }\n        }\n      }\n\n    }\n  };\n}\n/**\n * @internal\n */\n\n\nfunction ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var _schema$getDirectives;\n\n  const requiredArgsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = (_schema$getDirectives = schema === null || schema === void 0 ? void 0 : schema.getDirectives()) !== null && _schema$getDirectives !== void 0 ? _schema$getDirectives : _directives.specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    requiredArgsMap[directive.name] = (0, _keyMap.keyMap)(directive.args.filter(_definition.isRequiredArgument), arg => arg.name);\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n\n\n      const argNodes = (_def$arguments = def.arguments) !== null && _def$arguments !== void 0 ? _def$arguments : [];\n      requiredArgsMap[def.name.value] = (0, _keyMap.keyMap)(argNodes.filter(isRequiredArgumentNode), arg => arg.name.value);\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(directiveNode) {\n        const directiveName = directiveNode.name.value;\n        const requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n          /* c8 ignore next */\n\n\n          const argNodes = (_directiveNode$argume = directiveNode.arguments) !== null && _directiveNode$argume !== void 0 ? _directiveNode$argume : [];\n          const argNodeMap = new Set(argNodes.map(arg => arg.name.value));\n\n          for (const [argName, argDef] of Object.entries(requiredArgs)) {\n            if (!argNodeMap.has(argName)) {\n              const argType = (0, _definition.isType)(argDef.type) ? (0, _inspect.inspect)(argDef.type) : (0, _printer.print)(argDef.type);\n              context.reportError(new _GraphQLError.GraphQLError(`Directive \"@${directiveName}\" argument \"${argName}\" of type \"${argType}\" is required, but it was not provided.`, {\n                nodes: directiveNode\n              }));\n            }\n          }\n        }\n      }\n\n    }\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return arg.type.kind === _kinds.Kind.NON_NULL_TYPE && arg.defaultValue == null;\n}","map":{"version":3,"sources":["/home/atefeh/Documents/my-project/netflix/node_modules/graphql/validation/rules/ProvidedRequiredArgumentsRule.js"],"names":["Object","defineProperty","exports","value","ProvidedRequiredArgumentsOnDirectivesRule","ProvidedRequiredArgumentsRule","_inspect","require","_keyMap","_GraphQLError","_kinds","_printer","_definition","_directives","context","Field","leave","fieldNode","_fieldNode$arguments","fieldDef","getFieldDef","providedArgs","Set","arguments","map","arg","name","argDef","args","has","isRequiredArgument","argTypeStr","inspect","type","reportError","GraphQLError","nodes","_schema$getDirectives","requiredArgsMap","create","schema","getSchema","definedDirectives","getDirectives","specifiedDirectives","directive","keyMap","filter","astDefinitions","getDocument","definitions","def","kind","Kind","DIRECTIVE_DEFINITION","_def$arguments","argNodes","isRequiredArgumentNode","Directive","directiveNode","directiveName","requiredArgs","_directiveNode$argume","argNodeMap","argName","entries","argType","isType","print","NON_NULL_TYPE","defaultValue"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ProvidedRequiredArgumentsOnDirectivesRule =\n  ProvidedRequiredArgumentsOnDirectivesRule;\nexports.ProvidedRequiredArgumentsRule = ProvidedRequiredArgumentsRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _keyMap = require('../../jsutils/keyMap.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _directives = require('../../type/directives.js');\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nfunction ProvidedRequiredArgumentsRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...ProvidedRequiredArgumentsOnDirectivesRule(context),\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        }\n\n        const providedArgs = new Set( // FIXME: https://github.com/graphql/graphql-js/issues/2203\n          /* c8 ignore next */\n          (_fieldNode$arguments = fieldNode.arguments) === null ||\n          _fieldNode$arguments === void 0\n            ? void 0\n            : _fieldNode$arguments.map((arg) => arg.name.value),\n        );\n\n        for (const argDef of fieldDef.args) {\n          if (\n            !providedArgs.has(argDef.name) &&\n            (0, _definition.isRequiredArgument)(argDef)\n          ) {\n            const argTypeStr = (0, _inspect.inspect)(argDef.type);\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `Field \"${fieldDef.name}\" argument \"${argDef.name}\" of type \"${argTypeStr}\" is required, but it was not provided.`,\n                {\n                  nodes: fieldNode,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n/**\n * @internal\n */\n\nfunction ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var _schema$getDirectives;\n\n  const requiredArgsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives =\n    (_schema$getDirectives =\n      schema === null || schema === void 0\n        ? void 0\n        : schema.getDirectives()) !== null && _schema$getDirectives !== void 0\n      ? _schema$getDirectives\n      : _directives.specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    requiredArgsMap[directive.name] = (0, _keyMap.keyMap)(\n      directive.args.filter(_definition.isRequiredArgument),\n      (arg) => arg.name,\n    );\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      requiredArgsMap[def.name.value] = (0, _keyMap.keyMap)(\n        argNodes.filter(isRequiredArgumentNode),\n        (arg) => arg.name.value,\n      );\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(directiveNode) {\n        const directiveName = directiveNode.name.value;\n        const requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n          /* c8 ignore next */\n          const argNodes =\n            (_directiveNode$argume = directiveNode.arguments) !== null &&\n            _directiveNode$argume !== void 0\n              ? _directiveNode$argume\n              : [];\n          const argNodeMap = new Set(argNodes.map((arg) => arg.name.value));\n\n          for (const [argName, argDef] of Object.entries(requiredArgs)) {\n            if (!argNodeMap.has(argName)) {\n              const argType = (0, _definition.isType)(argDef.type)\n                ? (0, _inspect.inspect)(argDef.type)\n                : (0, _printer.print)(argDef.type);\n              context.reportError(\n                new _GraphQLError.GraphQLError(\n                  `Directive \"@${directiveName}\" argument \"${argName}\" of type \"${argType}\" is required, but it was not provided.`,\n                  {\n                    nodes: directiveNode,\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return (\n    arg.type.kind === _kinds.Kind.NON_NULL_TYPE && arg.defaultValue == null\n  );\n}\n"]},"metadata":{},"sourceType":"script"}