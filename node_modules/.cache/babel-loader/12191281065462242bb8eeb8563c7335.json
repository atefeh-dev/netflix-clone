{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.UniqueOperationNamesRule = UniqueOperationNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness\n */\n\n\nfunction UniqueOperationNamesRule(context) {\n  const knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition(node) {\n      const operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(new _GraphQLError.GraphQLError(`There can be only one operation named \"${operationName.value}\".`, {\n            nodes: [knownOperationNames[operationName.value], operationName]\n          }));\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n\n    FragmentDefinition: () => false\n  };\n}","map":{"version":3,"sources":["/home/atefeh/Documents/my-project/netflix/node_modules/graphql/validation/rules/UniqueOperationNamesRule.js"],"names":["Object","defineProperty","exports","value","UniqueOperationNamesRule","_GraphQLError","require","context","knownOperationNames","create","OperationDefinition","node","operationName","name","reportError","GraphQLError","nodes","FragmentDefinition"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,wBAAR,GAAmCA,wBAAnC;;AAEA,IAAIC,aAAa,GAAGC,OAAO,CAAC,6BAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,wBAAT,CAAkCG,OAAlC,EAA2C;AACzC,QAAMC,mBAAmB,GAAGR,MAAM,CAACS,MAAP,CAAc,IAAd,CAA5B;AACA,SAAO;AACLC,IAAAA,mBAAmB,CAACC,IAAD,EAAO;AACxB,YAAMC,aAAa,GAAGD,IAAI,CAACE,IAA3B;;AAEA,UAAID,aAAJ,EAAmB;AACjB,YAAIJ,mBAAmB,CAACI,aAAa,CAACT,KAAf,CAAvB,EAA8C;AAC5CI,UAAAA,OAAO,CAACO,WAAR,CACE,IAAIT,aAAa,CAACU,YAAlB,CACG,0CAAyCH,aAAa,CAACT,KAAM,IADhE,EAEE;AACEa,YAAAA,KAAK,EAAE,CACLR,mBAAmB,CAACI,aAAa,CAACT,KAAf,CADd,EAELS,aAFK;AADT,WAFF,CADF;AAWD,SAZD,MAYO;AACLJ,UAAAA,mBAAmB,CAACI,aAAa,CAACT,KAAf,CAAnB,GAA2CS,aAA3C;AACD;AACF;;AAED,aAAO,KAAP;AACD,KAvBI;;AAyBLK,IAAAA,kBAAkB,EAAE,MAAM;AAzBrB,GAAP;AA2BD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueOperationNamesRule = UniqueOperationNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness\n */\nfunction UniqueOperationNamesRule(context) {\n  const knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition(node) {\n      const operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `There can be only one operation named \"${operationName.value}\".`,\n              {\n                nodes: [\n                  knownOperationNames[operationName.value],\n                  operationName,\n                ],\n              },\n            ),\n          );\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n\n    FragmentDefinition: () => false,\n  };\n}\n"]},"metadata":{},"sourceType":"script"}