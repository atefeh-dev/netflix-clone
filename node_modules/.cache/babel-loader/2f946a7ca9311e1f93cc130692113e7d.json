{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.inspect = inspect;\nconst MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nfunction inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string' ? jsonValue : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(_ref => {\n    let [key, value] = _ref;\n    return key + ': ' + formatValue(value, seenValues);\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}","map":{"version":3,"sources":["/home/atefeh/Documents/my-project/netflix/node_modules/graphql/jsutils/inspect.js"],"names":["Object","defineProperty","exports","value","inspect","MAX_ARRAY_LENGTH","MAX_RECURSIVE_DEPTH","formatValue","seenValues","JSON","stringify","name","formatObjectValue","String","previouslySeenValues","includes","isJSONable","jsonValue","toJSON","Array","isArray","formatArray","formatObject","object","entries","length","getObjectTag","properties","map","key","join","array","len","Math","min","remaining","items","i","push","tag","prototype","toString","call","replace","constructor"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.inspect = inspect;\nconst MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nfunction inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n"]},"metadata":{},"sourceType":"script"}