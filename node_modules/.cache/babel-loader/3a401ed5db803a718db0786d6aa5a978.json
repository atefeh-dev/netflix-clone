{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.mapAsyncIterator = mapAsyncIterator;\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\n\nfunction mapAsyncIterator(iterable, callback) {\n  const iterator = iterable[Symbol.asyncIterator]();\n\n  async function mapResult(result) {\n    if (result.done) {\n      return result;\n    }\n\n    try {\n      return {\n        value: await callback(result.value),\n        done: false\n      };\n    } catch (error) {\n      /* c8 ignore start */\n      // FIXME: add test case\n      if (typeof iterator.return === 'function') {\n        try {\n          await iterator.return();\n        } catch (_e) {\n          /* ignore error */\n        }\n      }\n\n      throw error;\n      /* c8 ignore stop */\n    }\n  }\n\n  return {\n    async next() {\n      return mapResult(await iterator.next());\n    },\n\n    async return() {\n      // If iterator.return() does not exist, then type R must be undefined.\n      return typeof iterator.return === 'function' ? mapResult(await iterator.return()) : {\n        value: undefined,\n        done: true\n      };\n    },\n\n    async throw(error) {\n      if (typeof iterator.throw === 'function') {\n        return mapResult(await iterator.throw(error));\n      }\n\n      throw error;\n    },\n\n    [Symbol.asyncIterator]() {\n      return this;\n    }\n\n  };\n}","map":{"version":3,"sources":["/home/atefeh/Documents/my-project/netflix/node_modules/graphql/execution/mapAsyncIterator.js"],"names":["Object","defineProperty","exports","value","mapAsyncIterator","iterable","callback","iterator","Symbol","asyncIterator","mapResult","result","done","error","return","_e","next","undefined","throw"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B;AAEA;AACA;AACA;AACA;;AACA,SAASA,gBAAT,CAA0BC,QAA1B,EAAoCC,QAApC,EAA8C;AAC5C,QAAMC,QAAQ,GAAGF,QAAQ,CAACG,MAAM,CAACC,aAAR,CAAR,EAAjB;;AAEA,iBAAeC,SAAf,CAAyBC,MAAzB,EAAiC;AAC/B,QAAIA,MAAM,CAACC,IAAX,EAAiB;AACf,aAAOD,MAAP;AACD;;AAED,QAAI;AACF,aAAO;AACLR,QAAAA,KAAK,EAAE,MAAMG,QAAQ,CAACK,MAAM,CAACR,KAAR,CADhB;AAELS,QAAAA,IAAI,EAAE;AAFD,OAAP;AAID,KALD,CAKE,OAAOC,KAAP,EAAc;AACd;AACA;AACA,UAAI,OAAON,QAAQ,CAACO,MAAhB,KAA2B,UAA/B,EAA2C;AACzC,YAAI;AACF,gBAAMP,QAAQ,CAACO,MAAT,EAAN;AACD,SAFD,CAEE,OAAOC,EAAP,EAAW;AACX;AACD;AACF;;AAED,YAAMF,KAAN;AACA;AACD;AACF;;AAED,SAAO;AACL,UAAMG,IAAN,GAAa;AACX,aAAON,SAAS,CAAC,MAAMH,QAAQ,CAACS,IAAT,EAAP,CAAhB;AACD,KAHI;;AAKL,UAAMF,MAAN,GAAe;AACb;AACA,aAAO,OAAOP,QAAQ,CAACO,MAAhB,KAA2B,UAA3B,GACHJ,SAAS,CAAC,MAAMH,QAAQ,CAACO,MAAT,EAAP,CADN,GAEH;AACEX,QAAAA,KAAK,EAAEc,SADT;AAEEL,QAAAA,IAAI,EAAE;AAFR,OAFJ;AAMD,KAbI;;AAeL,UAAMM,KAAN,CAAYL,KAAZ,EAAmB;AACjB,UAAI,OAAON,QAAQ,CAACW,KAAhB,KAA0B,UAA9B,EAA0C;AACxC,eAAOR,SAAS,CAAC,MAAMH,QAAQ,CAACW,KAAT,CAAeL,KAAf,CAAP,CAAhB;AACD;;AAED,YAAMA,KAAN;AACD,KArBI;;AAuBL,KAACL,MAAM,CAACC,aAAR,IAAyB;AACvB,aAAO,IAAP;AACD;;AAzBI,GAAP;AA2BD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.mapAsyncIterator = mapAsyncIterator;\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterable, callback) {\n  const iterator = iterable[Symbol.asyncIterator]();\n\n  async function mapResult(result) {\n    if (result.done) {\n      return result;\n    }\n\n    try {\n      return {\n        value: await callback(result.value),\n        done: false,\n      };\n    } catch (error) {\n      /* c8 ignore start */\n      // FIXME: add test case\n      if (typeof iterator.return === 'function') {\n        try {\n          await iterator.return();\n        } catch (_e) {\n          /* ignore error */\n        }\n      }\n\n      throw error;\n      /* c8 ignore stop */\n    }\n  }\n\n  return {\n    async next() {\n      return mapResult(await iterator.next());\n    },\n\n    async return() {\n      // If iterator.return() does not exist, then type R must be undefined.\n      return typeof iterator.return === 'function'\n        ? mapResult(await iterator.return())\n        : {\n            value: undefined,\n            done: true,\n          };\n    },\n\n    async throw(error) {\n      if (typeof iterator.throw === 'function') {\n        return mapResult(await iterator.throw(error));\n      }\n\n      throw error;\n    },\n\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"script"}