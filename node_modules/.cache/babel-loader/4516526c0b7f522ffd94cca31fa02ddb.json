{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.toError = toError;\n\nvar _inspect = require('./inspect.js');\n/**\n * Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n */\n\n\nfunction toError(thrownValue) {\n  return thrownValue instanceof Error ? thrownValue : new NonErrorThrown(thrownValue);\n}\n\nclass NonErrorThrown extends Error {\n  constructor(thrownValue) {\n    super('Unexpected error value: ' + (0, _inspect.inspect)(thrownValue));\n    this.name = 'NonErrorThrown';\n    this.thrownValue = thrownValue;\n  }\n\n}","map":{"version":3,"sources":["/home/atefeh/Documents/my-project/netflix/node_modules/graphql/jsutils/toError.js"],"names":["Object","defineProperty","exports","value","toError","_inspect","require","thrownValue","Error","NonErrorThrown","constructor","inspect","name"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBA,OAAlB;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAtB;AAEA;AACA;AACA;;;AACA,SAASF,OAAT,CAAiBG,WAAjB,EAA8B;AAC5B,SAAOA,WAAW,YAAYC,KAAvB,GACHD,WADG,GAEH,IAAIE,cAAJ,CAAmBF,WAAnB,CAFJ;AAGD;;AAED,MAAME,cAAN,SAA6BD,KAA7B,CAAmC;AACjCE,EAAAA,WAAW,CAACH,WAAD,EAAc;AACvB,UAAM,6BAA6B,CAAC,GAAGF,QAAQ,CAACM,OAAb,EAAsBJ,WAAtB,CAAnC;AACA,SAAKK,IAAL,GAAY,gBAAZ;AACA,SAAKL,WAAL,GAAmBA,WAAnB;AACD;;AALgC","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.toError = toError;\n\nvar _inspect = require('./inspect.js');\n\n/**\n * Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n */\nfunction toError(thrownValue) {\n  return thrownValue instanceof Error\n    ? thrownValue\n    : new NonErrorThrown(thrownValue);\n}\n\nclass NonErrorThrown extends Error {\n  constructor(thrownValue) {\n    super('Unexpected error value: ' + (0, _inspect.inspect)(thrownValue));\n    this.name = 'NonErrorThrown';\n    this.thrownValue = thrownValue;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}