{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.LoneAnonymousOperationRule = LoneAnonymousOperationRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n *\n * See https://spec.graphql.org/draft/#sec-Lone-Anonymous-Operation\n */\n\n\nfunction LoneAnonymousOperationRule(context) {\n  let operationCount = 0;\n  return {\n    Document(node) {\n      operationCount = node.definitions.filter(definition => definition.kind === _kinds.Kind.OPERATION_DEFINITION).length;\n    },\n\n    OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(new _GraphQLError.GraphQLError('This anonymous operation must be the only defined operation.', {\n          nodes: node\n        }));\n      }\n    }\n\n  };\n}","map":{"version":3,"sources":["/home/atefeh/Documents/my-project/netflix/node_modules/graphql/validation/rules/LoneAnonymousOperationRule.js"],"names":["Object","defineProperty","exports","value","LoneAnonymousOperationRule","_GraphQLError","require","_kinds","context","operationCount","Document","node","definitions","filter","definition","kind","Kind","OPERATION_DEFINITION","length","OperationDefinition","name","reportError","GraphQLError","nodes"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,0BAAR,GAAqCA,0BAArC;;AAEA,IAAIC,aAAa,GAAGC,OAAO,CAAC,6BAAD,CAA3B;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,yBAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,0BAAT,CAAoCI,OAApC,EAA6C;AAC3C,MAAIC,cAAc,GAAG,CAArB;AACA,SAAO;AACLC,IAAAA,QAAQ,CAACC,IAAD,EAAO;AACbF,MAAAA,cAAc,GAAGE,IAAI,CAACC,WAAL,CAAiBC,MAAjB,CACdC,UAAD,IAAgBA,UAAU,CAACC,IAAX,KAAoBR,MAAM,CAACS,IAAP,CAAYC,oBADjC,EAEfC,MAFF;AAGD,KALI;;AAOLC,IAAAA,mBAAmB,CAACR,IAAD,EAAO;AACxB,UAAI,CAACA,IAAI,CAACS,IAAN,IAAcX,cAAc,GAAG,CAAnC,EAAsC;AACpCD,QAAAA,OAAO,CAACa,WAAR,CACE,IAAIhB,aAAa,CAACiB,YAAlB,CACE,8DADF,EAEE;AACEC,UAAAA,KAAK,EAAEZ;AADT,SAFF,CADF;AAQD;AACF;;AAlBI,GAAP;AAoBD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.LoneAnonymousOperationRule = LoneAnonymousOperationRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n *\n * See https://spec.graphql.org/draft/#sec-Lone-Anonymous-Operation\n */\nfunction LoneAnonymousOperationRule(context) {\n  let operationCount = 0;\n  return {\n    Document(node) {\n      operationCount = node.definitions.filter(\n        (definition) => definition.kind === _kinds.Kind.OPERATION_DEFINITION,\n      ).length;\n    },\n\n    OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            'This anonymous operation must be the only defined operation.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"script"}