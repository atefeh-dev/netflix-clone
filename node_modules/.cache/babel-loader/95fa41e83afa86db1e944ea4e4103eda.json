{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.KnownFragmentNamesRule = KnownFragmentNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spread-target-defined\n */\n\n\nfunction KnownFragmentNamesRule(context) {\n  return {\n    FragmentSpread(node) {\n      const fragmentName = node.name.value;\n      const fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(new _GraphQLError.GraphQLError(`Unknown fragment \"${fragmentName}\".`, {\n          nodes: node.name\n        }));\n      }\n    }\n\n  };\n}","map":{"version":3,"sources":["/home/atefeh/Documents/my-project/netflix/node_modules/graphql/validation/rules/KnownFragmentNamesRule.js"],"names":["Object","defineProperty","exports","value","KnownFragmentNamesRule","_GraphQLError","require","context","FragmentSpread","node","fragmentName","name","fragment","getFragment","reportError","GraphQLError","nodes"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,sBAAR,GAAiCA,sBAAjC;;AAEA,IAAIC,aAAa,GAAGC,OAAO,CAAC,6BAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,sBAAT,CAAgCG,OAAhC,EAAyC;AACvC,SAAO;AACLC,IAAAA,cAAc,CAACC,IAAD,EAAO;AACnB,YAAMC,YAAY,GAAGD,IAAI,CAACE,IAAL,CAAUR,KAA/B;AACA,YAAMS,QAAQ,GAAGL,OAAO,CAACM,WAAR,CAAoBH,YAApB,CAAjB;;AAEA,UAAI,CAACE,QAAL,EAAe;AACbL,QAAAA,OAAO,CAACO,WAAR,CACE,IAAIT,aAAa,CAACU,YAAlB,CACG,qBAAoBL,YAAa,IADpC,EAEE;AACEM,UAAAA,KAAK,EAAEP,IAAI,CAACE;AADd,SAFF,CADF;AAQD;AACF;;AAfI,GAAP;AAiBD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.KnownFragmentNamesRule = KnownFragmentNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spread-target-defined\n */\nfunction KnownFragmentNamesRule(context) {\n  return {\n    FragmentSpread(node) {\n      const fragmentName = node.name.value;\n      const fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Unknown fragment \"${fragmentName}\".`,\n            {\n              nodes: node.name,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"script"}