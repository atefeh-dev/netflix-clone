{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.NoSchemaIntrospectionCustomRule = NoSchemaIntrospectionCustomRule;\n\nvar _GraphQLError = require('../../../error/GraphQLError.js');\n\nvar _definition = require('../../../type/definition.js');\n\nvar _introspection = require('../../../type/introspection.js');\n/**\n * Prohibit introspection queries\n *\n * A GraphQL document is only valid if all fields selected are not fields that\n * return an introspection type.\n *\n * Note: This rule is optional and is not part of the Validation section of the\n * GraphQL Specification. This rule effectively disables introspection, which\n * does not reflect best practices and should only be done if absolutely necessary.\n */\n\n\nfunction NoSchemaIntrospectionCustomRule(context) {\n  return {\n    Field(node) {\n      const type = (0, _definition.getNamedType)(context.getType());\n\n      if (type && (0, _introspection.isIntrospectionType)(type)) {\n        context.reportError(new _GraphQLError.GraphQLError(`GraphQL introspection has been disabled, but the requested query contained the field \"${node.name.value}\".`, {\n          nodes: node\n        }));\n      }\n    }\n\n  };\n}","map":{"version":3,"sources":["/home/atefeh/Documents/my-project/netflix/node_modules/graphql/validation/rules/custom/NoSchemaIntrospectionCustomRule.js"],"names":["Object","defineProperty","exports","value","NoSchemaIntrospectionCustomRule","_GraphQLError","require","_definition","_introspection","context","Field","node","type","getNamedType","getType","isIntrospectionType","reportError","GraphQLError","name","nodes"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,+BAAR,GAA0CA,+BAA1C;;AAEA,IAAIC,aAAa,GAAGC,OAAO,CAAC,gCAAD,CAA3B;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,6BAAD,CAAzB;;AAEA,IAAIE,cAAc,GAAGF,OAAO,CAAC,gCAAD,CAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,+BAAT,CAAyCK,OAAzC,EAAkD;AAChD,SAAO;AACLC,IAAAA,KAAK,CAACC,IAAD,EAAO;AACV,YAAMC,IAAI,GAAG,CAAC,GAAGL,WAAW,CAACM,YAAhB,EAA8BJ,OAAO,CAACK,OAAR,EAA9B,CAAb;;AAEA,UAAIF,IAAI,IAAI,CAAC,GAAGJ,cAAc,CAACO,mBAAnB,EAAwCH,IAAxC,CAAZ,EAA2D;AACzDH,QAAAA,OAAO,CAACO,WAAR,CACE,IAAIX,aAAa,CAACY,YAAlB,CACG,yFAAwFN,IAAI,CAACO,IAAL,CAAUf,KAAM,IAD3G,EAEE;AACEgB,UAAAA,KAAK,EAAER;AADT,SAFF,CADF;AAQD;AACF;;AAdI,GAAP;AAgBD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoSchemaIntrospectionCustomRule = NoSchemaIntrospectionCustomRule;\n\nvar _GraphQLError = require('../../../error/GraphQLError.js');\n\nvar _definition = require('../../../type/definition.js');\n\nvar _introspection = require('../../../type/introspection.js');\n\n/**\n * Prohibit introspection queries\n *\n * A GraphQL document is only valid if all fields selected are not fields that\n * return an introspection type.\n *\n * Note: This rule is optional and is not part of the Validation section of the\n * GraphQL Specification. This rule effectively disables introspection, which\n * does not reflect best practices and should only be done if absolutely necessary.\n */\nfunction NoSchemaIntrospectionCustomRule(context) {\n  return {\n    Field(node) {\n      const type = (0, _definition.getNamedType)(context.getType());\n\n      if (type && (0, _introspection.isIntrospectionType)(type)) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `GraphQL introspection has been disabled, but the requested query contained the field \"${node.name.value}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"script"}