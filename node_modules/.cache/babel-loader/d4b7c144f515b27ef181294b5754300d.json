{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.assertValidName = assertValidName;\nexports.isValidNameError = isValidNameError;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _assertName = require('../type/assertName.js');\n/* c8 ignore start */\n\n/**\n * Upholds the spec rules about naming.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\n\nfunction assertValidName(name) {\n  const error = isValidNameError(name);\n\n  if (error) {\n    throw error;\n  }\n\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\n\nfunction isValidNameError(name) {\n  typeof name === 'string' || (0, _devAssert.devAssert)(false, 'Expected name to be a string.');\n\n  if (name.startsWith('__')) {\n    return new _GraphQLError.GraphQLError(`Name \"${name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`);\n  }\n\n  try {\n    (0, _assertName.assertName)(name);\n  } catch (error) {\n    return error;\n  }\n}\n/* c8 ignore stop */","map":{"version":3,"sources":["/home/atefeh/Documents/my-project/netflix/node_modules/graphql/utilities/assertValidName.js"],"names":["Object","defineProperty","exports","value","assertValidName","isValidNameError","_devAssert","require","_GraphQLError","_assertName","name","error","devAssert","startsWith","GraphQLError","assertName"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,eAAR,GAA0BA,eAA1B;AACAF,OAAO,CAACG,gBAAR,GAA2BA,gBAA3B;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,yBAAD,CAAxB;;AAEA,IAAIC,aAAa,GAAGD,OAAO,CAAC,0BAAD,CAA3B;;AAEA,IAAIE,WAAW,GAAGF,OAAO,CAAC,uBAAD,CAAzB;AAEA;;AAEA;AACA;AACA;AACA;;;AACA,SAASH,eAAT,CAAyBM,IAAzB,EAA+B;AAC7B,QAAMC,KAAK,GAAGN,gBAAgB,CAACK,IAAD,CAA9B;;AAEA,MAAIC,KAAJ,EAAW;AACT,UAAMA,KAAN;AACD;;AAED,SAAOD,IAAP;AACD;AACD;AACA;AACA;AACA;;;AAEA,SAASL,gBAAT,CAA0BK,IAA1B,EAAgC;AAC9B,SAAOA,IAAP,KAAgB,QAAhB,IACE,CAAC,GAAGJ,UAAU,CAACM,SAAf,EAA0B,KAA1B,EAAiC,+BAAjC,CADF;;AAGA,MAAIF,IAAI,CAACG,UAAL,CAAgB,IAAhB,CAAJ,EAA2B;AACzB,WAAO,IAAIL,aAAa,CAACM,YAAlB,CACJ,SAAQJ,IAAK,yEADT,CAAP;AAGD;;AAED,MAAI;AACF,KAAC,GAAGD,WAAW,CAACM,UAAhB,EAA4BL,IAA5B;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertValidName = assertValidName;\nexports.isValidNameError = isValidNameError;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _assertName = require('../type/assertName.js');\n\n/* c8 ignore start */\n\n/**\n * Upholds the spec rules about naming.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\nfunction assertValidName(name) {\n  const error = isValidNameError(name);\n\n  if (error) {\n    throw error;\n  }\n\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\nfunction isValidNameError(name) {\n  typeof name === 'string' ||\n    (0, _devAssert.devAssert)(false, 'Expected name to be a string.');\n\n  if (name.startsWith('__')) {\n    return new _GraphQLError.GraphQLError(\n      `Name \"${name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n    );\n  }\n\n  try {\n    (0, _assertName.assertName)(name);\n  } catch (error) {\n    return error;\n  }\n}\n/* c8 ignore stop */\n"]},"metadata":{},"sourceType":"script"}