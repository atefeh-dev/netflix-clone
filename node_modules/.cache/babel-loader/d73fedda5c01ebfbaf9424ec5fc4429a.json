{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.getOperationRootType = getOperationRootType;\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n/**\n * Extracts the root type of the operation from the schema.\n *\n * @deprecated Please use `GraphQLSchema.getRootType` instead. Will be removed in v17\n */\n\n\nfunction getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    const queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new _GraphQLError.GraphQLError('Schema does not define the required query root type.', {\n        nodes: operation\n      });\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    const mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new _GraphQLError.GraphQLError('Schema is not configured for mutations.', {\n        nodes: operation\n      });\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    const subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new _GraphQLError.GraphQLError('Schema is not configured for subscriptions.', {\n        nodes: operation\n      });\n    }\n\n    return subscriptionType;\n  }\n\n  throw new _GraphQLError.GraphQLError('Can only have query, mutation and subscription operations.', {\n    nodes: operation\n  });\n}","map":{"version":3,"sources":["/home/atefeh/Documents/my-project/netflix/node_modules/graphql/utilities/getOperationRootType.js"],"names":["Object","defineProperty","exports","value","getOperationRootType","_GraphQLError","require","schema","operation","queryType","getQueryType","GraphQLError","nodes","mutationType","getMutationType","subscriptionType","getSubscriptionType"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B;;AAEA,IAAIC,aAAa,GAAGC,OAAO,CAAC,0BAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;;;AACA,SAASF,oBAAT,CAA8BG,MAA9B,EAAsCC,SAAtC,EAAiD;AAC/C,MAAIA,SAAS,CAACA,SAAV,KAAwB,OAA5B,EAAqC;AACnC,UAAMC,SAAS,GAAGF,MAAM,CAACG,YAAP,EAAlB;;AAEA,QAAI,CAACD,SAAL,EAAgB;AACd,YAAM,IAAIJ,aAAa,CAACM,YAAlB,CACJ,sDADI,EAEJ;AACEC,QAAAA,KAAK,EAAEJ;AADT,OAFI,CAAN;AAMD;;AAED,WAAOC,SAAP;AACD;;AAED,MAAID,SAAS,CAACA,SAAV,KAAwB,UAA5B,EAAwC;AACtC,UAAMK,YAAY,GAAGN,MAAM,CAACO,eAAP,EAArB;;AAEA,QAAI,CAACD,YAAL,EAAmB;AACjB,YAAM,IAAIR,aAAa,CAACM,YAAlB,CACJ,yCADI,EAEJ;AACEC,QAAAA,KAAK,EAAEJ;AADT,OAFI,CAAN;AAMD;;AAED,WAAOK,YAAP;AACD;;AAED,MAAIL,SAAS,CAACA,SAAV,KAAwB,cAA5B,EAA4C;AAC1C,UAAMO,gBAAgB,GAAGR,MAAM,CAACS,mBAAP,EAAzB;;AAEA,QAAI,CAACD,gBAAL,EAAuB;AACrB,YAAM,IAAIV,aAAa,CAACM,YAAlB,CACJ,6CADI,EAEJ;AACEC,QAAAA,KAAK,EAAEJ;AADT,OAFI,CAAN;AAMD;;AAED,WAAOO,gBAAP;AACD;;AAED,QAAM,IAAIV,aAAa,CAACM,YAAlB,CACJ,4DADI,EAEJ;AACEC,IAAAA,KAAK,EAAEJ;AADT,GAFI,CAAN;AAMD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getOperationRootType = getOperationRootType;\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\n/**\n * Extracts the root type of the operation from the schema.\n *\n * @deprecated Please use `GraphQLSchema.getRootType` instead. Will be removed in v17\n */\nfunction getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    const queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new _GraphQLError.GraphQLError(\n        'Schema does not define the required query root type.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    const mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new _GraphQLError.GraphQLError(\n        'Schema is not configured for mutations.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    const subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new _GraphQLError.GraphQLError(\n        'Schema is not configured for subscriptions.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return subscriptionType;\n  }\n\n  throw new _GraphQLError.GraphQLError(\n    'Can only have query, mutation and subscription operations.',\n    {\n      nodes: operation,\n    },\n  );\n}\n"]},"metadata":{},"sourceType":"script"}