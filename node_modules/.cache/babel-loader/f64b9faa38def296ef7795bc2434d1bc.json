{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.didYouMean = didYouMean;\nconst MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\nfunction didYouMean(firstArg, secondArg) {\n  const [subMessage, suggestionsArg] = secondArg ? [firstArg, secondArg] : [undefined, firstArg];\n  let message = ' Did you mean ';\n\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n\n  const suggestions = suggestionsArg.map(x => `\"${x}\"`);\n\n  switch (suggestions.length) {\n    case 0:\n      return '';\n\n    case 1:\n      return message + suggestions[0] + '?';\n\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n\n  const selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  const lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}","map":{"version":3,"sources":["/home/atefeh/Documents/my-project/netflix/node_modules/graphql/jsutils/didYouMean.js"],"names":["Object","defineProperty","exports","value","didYouMean","MAX_SUGGESTIONS","firstArg","secondArg","subMessage","suggestionsArg","undefined","message","suggestions","map","x","length","selected","slice","lastItem","pop","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,UAAR,GAAqBA,UAArB;AACA,MAAMC,eAAe,GAAG,CAAxB;AACA;AACA;AACA;;AAEA,SAASD,UAAT,CAAoBE,QAApB,EAA8BC,SAA9B,EAAyC;AACvC,QAAM,CAACC,UAAD,EAAaC,cAAb,IAA+BF,SAAS,GAC1C,CAACD,QAAD,EAAWC,SAAX,CAD0C,GAE1C,CAACG,SAAD,EAAYJ,QAAZ,CAFJ;AAGA,MAAIK,OAAO,GAAG,gBAAd;;AAEA,MAAIH,UAAJ,EAAgB;AACdG,IAAAA,OAAO,IAAIH,UAAU,GAAG,GAAxB;AACD;;AAED,QAAMI,WAAW,GAAGH,cAAc,CAACI,GAAf,CAAoBC,CAAD,IAAQ,IAAGA,CAAE,GAAhC,CAApB;;AAEA,UAAQF,WAAW,CAACG,MAApB;AACE,SAAK,CAAL;AACE,aAAO,EAAP;;AAEF,SAAK,CAAL;AACE,aAAOJ,OAAO,GAAGC,WAAW,CAAC,CAAD,CAArB,GAA2B,GAAlC;;AAEF,SAAK,CAAL;AACE,aAAOD,OAAO,GAAGC,WAAW,CAAC,CAAD,CAArB,GAA2B,MAA3B,GAAoCA,WAAW,CAAC,CAAD,CAA/C,GAAqD,GAA5D;AARJ;;AAWA,QAAMI,QAAQ,GAAGJ,WAAW,CAACK,KAAZ,CAAkB,CAAlB,EAAqBZ,eAArB,CAAjB;AACA,QAAMa,QAAQ,GAAGF,QAAQ,CAACG,GAAT,EAAjB;AACA,SAAOR,OAAO,GAAGK,QAAQ,CAACI,IAAT,CAAc,IAAd,CAAV,GAAgC,OAAhC,GAA0CF,QAA1C,GAAqD,GAA5D;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.didYouMean = didYouMean;\nconst MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\nfunction didYouMean(firstArg, secondArg) {\n  const [subMessage, suggestionsArg] = secondArg\n    ? [firstArg, secondArg]\n    : [undefined, firstArg];\n  let message = ' Did you mean ';\n\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n\n  const suggestions = suggestionsArg.map((x) => `\"${x}\"`);\n\n  switch (suggestions.length) {\n    case 0:\n      return '';\n\n    case 1:\n      return message + suggestions[0] + '?';\n\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n\n  const selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  const lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}\n"]},"metadata":{},"sourceType":"script"}