{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.UniqueVariableNamesRule = UniqueVariableNamesRule;\n\nvar _groupBy = require('../../jsutils/groupBy.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\n\n\nfunction UniqueVariableNamesRule(context) {\n  return {\n    OperationDefinition(operationNode) {\n      var _operationNode$variab; // See: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n\n\n      const variableDefinitions = (_operationNode$variab = operationNode.variableDefinitions) !== null && _operationNode$variab !== void 0 ? _operationNode$variab : [];\n      const seenVariableDefinitions = (0, _groupBy.groupBy)(variableDefinitions, node => node.variable.name.value);\n\n      for (const [variableName, variableNodes] of seenVariableDefinitions) {\n        if (variableNodes.length > 1) {\n          context.reportError(new _GraphQLError.GraphQLError(`There can be only one variable named \"$${variableName}\".`, {\n            nodes: variableNodes.map(node => node.variable.name)\n          }));\n        }\n      }\n    }\n\n  };\n}","map":{"version":3,"sources":["/home/atefeh/Documents/my-project/netflix/node_modules/graphql/validation/rules/UniqueVariableNamesRule.js"],"names":["Object","defineProperty","exports","value","UniqueVariableNamesRule","_groupBy","require","_GraphQLError","context","OperationDefinition","operationNode","_operationNode$variab","variableDefinitions","seenVariableDefinitions","groupBy","node","variable","name","variableName","variableNodes","length","reportError","GraphQLError","nodes","map"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,uBAAR,GAAkCA,uBAAlC;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AAEA,IAAIC,aAAa,GAAGD,OAAO,CAAC,6BAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;;;AACA,SAASF,uBAAT,CAAiCI,OAAjC,EAA0C;AACxC,SAAO;AACLC,IAAAA,mBAAmB,CAACC,aAAD,EAAgB;AACjC,UAAIC,qBAAJ,CADiC,CAGjC;;AAEA;;;AACA,YAAMC,mBAAmB,GACvB,CAACD,qBAAqB,GAAGD,aAAa,CAACE,mBAAvC,MAAgE,IAAhE,IACAD,qBAAqB,KAAK,KAAK,CAD/B,GAEIA,qBAFJ,GAGI,EAJN;AAKA,YAAME,uBAAuB,GAAG,CAAC,GAAGR,QAAQ,CAACS,OAAb,EAC9BF,mBAD8B,EAE7BG,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAcC,IAAd,CAAmBd,KAFC,CAAhC;;AAKA,WAAK,MAAM,CAACe,YAAD,EAAeC,aAAf,CAAX,IAA4CN,uBAA5C,EAAqE;AACnE,YAAIM,aAAa,CAACC,MAAd,GAAuB,CAA3B,EAA8B;AAC5BZ,UAAAA,OAAO,CAACa,WAAR,CACE,IAAId,aAAa,CAACe,YAAlB,CACG,0CAAyCJ,YAAa,IADzD,EAEE;AACEK,YAAAA,KAAK,EAAEJ,aAAa,CAACK,GAAd,CAAmBT,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAcC,IAA1C;AADT,WAFF,CADF;AAQD;AACF;AACF;;AA7BI,GAAP;AA+BD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueVariableNamesRule = UniqueVariableNamesRule;\n\nvar _groupBy = require('../../jsutils/groupBy.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nfunction UniqueVariableNamesRule(context) {\n  return {\n    OperationDefinition(operationNode) {\n      var _operationNode$variab;\n\n      // See: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const variableDefinitions =\n        (_operationNode$variab = operationNode.variableDefinitions) !== null &&\n        _operationNode$variab !== void 0\n          ? _operationNode$variab\n          : [];\n      const seenVariableDefinitions = (0, _groupBy.groupBy)(\n        variableDefinitions,\n        (node) => node.variable.name.value,\n      );\n\n      for (const [variableName, variableNodes] of seenVariableDefinitions) {\n        if (variableNodes.length > 1) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `There can be only one variable named \"$${variableName}\".`,\n              {\n                nodes: variableNodes.map((node) => node.variable.name),\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"script"}