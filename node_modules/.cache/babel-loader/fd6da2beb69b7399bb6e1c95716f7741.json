{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.locatedError = locatedError;\n\nvar _toError = require('../jsutils/toError.js');\n\nvar _GraphQLError = require('./GraphQLError.js');\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\n\n\nfunction locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  const originalError = (0, _toError.toError)(rawOriginalError); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (isLocatedGraphQLError(originalError)) {\n    return originalError;\n  }\n\n  return new _GraphQLError.GraphQLError(originalError.message, {\n    nodes: (_nodes = originalError.nodes) !== null && _nodes !== void 0 ? _nodes : nodes,\n    source: originalError.source,\n    positions: originalError.positions,\n    path,\n    originalError\n  });\n}\n\nfunction isLocatedGraphQLError(error) {\n  return Array.isArray(error.path);\n}","map":{"version":3,"sources":["/home/atefeh/Documents/my-project/netflix/node_modules/graphql/error/locatedError.js"],"names":["Object","defineProperty","exports","value","locatedError","_toError","require","_GraphQLError","rawOriginalError","nodes","path","_nodes","originalError","toError","isLocatedGraphQLError","GraphQLError","message","source","positions","error","Array","isArray"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,YAAR,GAAuBA,YAAvB;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAIC,aAAa,GAAGD,OAAO,CAAC,mBAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;;;AACA,SAASF,YAAT,CAAsBI,gBAAtB,EAAwCC,KAAxC,EAA+CC,IAA/C,EAAqD;AACnD,MAAIC,MAAJ;;AAEA,QAAMC,aAAa,GAAG,CAAC,GAAGP,QAAQ,CAACQ,OAAb,EAAsBL,gBAAtB,CAAtB,CAHmD,CAGY;;AAE/D,MAAIM,qBAAqB,CAACF,aAAD,CAAzB,EAA0C;AACxC,WAAOA,aAAP;AACD;;AAED,SAAO,IAAIL,aAAa,CAACQ,YAAlB,CAA+BH,aAAa,CAACI,OAA7C,EAAsD;AAC3DP,IAAAA,KAAK,EACH,CAACE,MAAM,GAAGC,aAAa,CAACH,KAAxB,MAAmC,IAAnC,IAA2CE,MAAM,KAAK,KAAK,CAA3D,GACIA,MADJ,GAEIF,KAJqD;AAK3DQ,IAAAA,MAAM,EAAEL,aAAa,CAACK,MALqC;AAM3DC,IAAAA,SAAS,EAAEN,aAAa,CAACM,SANkC;AAO3DR,IAAAA,IAP2D;AAQ3DE,IAAAA;AAR2D,GAAtD,CAAP;AAUD;;AAED,SAASE,qBAAT,CAA+BK,KAA/B,EAAsC;AACpC,SAAOC,KAAK,CAACC,OAAN,CAAcF,KAAK,CAACT,IAApB,CAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.locatedError = locatedError;\n\nvar _toError = require('../jsutils/toError.js');\n\nvar _GraphQLError = require('./GraphQLError.js');\n\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\nfunction locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  const originalError = (0, _toError.toError)(rawOriginalError); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (isLocatedGraphQLError(originalError)) {\n    return originalError;\n  }\n\n  return new _GraphQLError.GraphQLError(originalError.message, {\n    nodes:\n      (_nodes = originalError.nodes) !== null && _nodes !== void 0\n        ? _nodes\n        : nodes,\n    source: originalError.source,\n    positions: originalError.positions,\n    path,\n    originalError,\n  });\n}\n\nfunction isLocatedGraphQLError(error) {\n  return Array.isArray(error.path);\n}\n"]},"metadata":{},"sourceType":"script"}