{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.GraphQLSpecifiedByDirective = exports.GraphQLSkipDirective = exports.GraphQLIncludeDirective = exports.GraphQLDirective = exports.GraphQLDeprecatedDirective = exports.DEFAULT_DEPRECATION_REASON = void 0;\nexports.assertDirective = assertDirective;\nexports.isDirective = isDirective;\nexports.isSpecifiedDirective = isSpecifiedDirective;\nexports.specifiedDirectives = void 0;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _toObjMap = require('../jsutils/toObjMap.js');\n\nvar _directiveLocation = require('../language/directiveLocation.js');\n\nvar _assertName = require('./assertName.js');\n\nvar _definition = require('./definition.js');\n\nvar _scalars = require('./scalars.js');\n/**\n * Test if the given value is a GraphQL directive.\n */\n\n\nfunction isDirective(directive) {\n  return (0, _instanceOf.instanceOf)(directive, GraphQLDirective);\n}\n\nfunction assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(`Expected ${(0, _inspect.inspect)(directive)} to be a GraphQL directive.`);\n  }\n\n  return directive;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\n\n\nclass GraphQLDirective {\n  constructor(config) {\n    var _config$isRepeatable, _config$args;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable = (_config$isRepeatable = config.isRepeatable) !== null && _config$isRepeatable !== void 0 ? _config$isRepeatable : false;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    Array.isArray(config.locations) || (0, _devAssert.devAssert)(false, `@${config.name} locations must be an Array.`);\n    const args = (_config$args = config.args) !== null && _config$args !== void 0 ? _config$args : {};\n    (0, _isObjectLike.isObjectLike)(args) && !Array.isArray(args) || (0, _devAssert.devAssert)(false, `@${config.name} args must be an object with argument names as keys.`);\n    this.args = (0, _definition.defineArguments)(args);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLDirective';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: (0, _definition.argsToArgsConfig)(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode\n    };\n  }\n\n  toString() {\n    return '@' + this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n\n}\n\nexports.GraphQLDirective = GraphQLDirective;\n/**\n * Used to conditionally include fields or fragments.\n */\n\nconst GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description: 'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [_directiveLocation.DirectiveLocation.FIELD, _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD, _directiveLocation.DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Included when true.'\n    }\n  }\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexports.GraphQLIncludeDirective = GraphQLIncludeDirective;\nconst GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description: 'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [_directiveLocation.DirectiveLocation.FIELD, _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD, _directiveLocation.DirectiveLocation.INLINE_FRAGMENT],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Skipped when true.'\n    }\n  }\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexports.GraphQLSkipDirective = GraphQLSkipDirective;\nconst DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexports.DEFAULT_DEPRECATION_REASON = DEFAULT_DEPRECATION_REASON;\nconst GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [_directiveLocation.DirectiveLocation.FIELD_DEFINITION, _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION, _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION, _directiveLocation.DirectiveLocation.ENUM_VALUE],\n  args: {\n    reason: {\n      type: _scalars.GraphQLString,\n      description: 'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\n/**\n * Used to provide a URL for specifying the behavior of custom scalar definitions.\n */\n\nexports.GraphQLDeprecatedDirective = GraphQLDeprecatedDirective;\nconst GraphQLSpecifiedByDirective = new GraphQLDirective({\n  name: 'specifiedBy',\n  description: 'Exposes a URL that specifies the behavior of this scalar.',\n  locations: [_directiveLocation.DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      description: 'The URL that specifies the behavior of this scalar.'\n    }\n  }\n});\n/**\n * The full list of specified directives.\n */\n\nexports.GraphQLSpecifiedByDirective = GraphQLSpecifiedByDirective;\nconst specifiedDirectives = Object.freeze([GraphQLIncludeDirective, GraphQLSkipDirective, GraphQLDeprecatedDirective, GraphQLSpecifiedByDirective]);\nexports.specifiedDirectives = specifiedDirectives;\n\nfunction isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(_ref => {\n    let {\n      name\n    } = _ref;\n    return name === directive.name;\n  });\n}","map":{"version":3,"sources":["/home/atefeh/Documents/my-project/netflix/node_modules/graphql/type/directives.js"],"names":["Object","defineProperty","exports","value","GraphQLSpecifiedByDirective","GraphQLSkipDirective","GraphQLIncludeDirective","GraphQLDirective","GraphQLDeprecatedDirective","DEFAULT_DEPRECATION_REASON","assertDirective","isDirective","isSpecifiedDirective","specifiedDirectives","_devAssert","require","_inspect","_instanceOf","_isObjectLike","_toObjMap","_directiveLocation","_assertName","_definition","_scalars","directive","instanceOf","Error","inspect","constructor","config","_config$isRepeatable","_config$args","name","assertName","description","locations","isRepeatable","extensions","toObjMap","astNode","Array","isArray","devAssert","args","isObjectLike","defineArguments","Symbol","toStringTag","toConfig","argsToArgsConfig","toString","toJSON","DirectiveLocation","FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT","if","type","GraphQLNonNull","GraphQLBoolean","FIELD_DEFINITION","ARGUMENT_DEFINITION","INPUT_FIELD_DEFINITION","ENUM_VALUE","reason","GraphQLString","defaultValue","SCALAR","url","freeze","some"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLSpecifiedByDirective =\n  exports.GraphQLSkipDirective =\n  exports.GraphQLIncludeDirective =\n  exports.GraphQLDirective =\n  exports.GraphQLDeprecatedDirective =\n  exports.DEFAULT_DEPRECATION_REASON =\n    void 0;\nexports.assertDirective = assertDirective;\nexports.isDirective = isDirective;\nexports.isSpecifiedDirective = isSpecifiedDirective;\nexports.specifiedDirectives = void 0;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _toObjMap = require('../jsutils/toObjMap.js');\n\nvar _directiveLocation = require('../language/directiveLocation.js');\n\nvar _assertName = require('./assertName.js');\n\nvar _definition = require('./definition.js');\n\nvar _scalars = require('./scalars.js');\n\n/**\n * Test if the given value is a GraphQL directive.\n */\nfunction isDirective(directive) {\n  return (0, _instanceOf.instanceOf)(directive, GraphQLDirective);\n}\n\nfunction assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(directive)} to be a GraphQL directive.`,\n    );\n  }\n\n  return directive;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\nclass GraphQLDirective {\n  constructor(config) {\n    var _config$isRepeatable, _config$args;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable =\n      (_config$isRepeatable = config.isRepeatable) !== null &&\n      _config$isRepeatable !== void 0\n        ? _config$isRepeatable\n        : false;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    Array.isArray(config.locations) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `@${config.name} locations must be an Array.`,\n      );\n    const args =\n      (_config$args = config.args) !== null && _config$args !== void 0\n        ? _config$args\n        : {};\n    ((0, _isObjectLike.isObjectLike)(args) && !Array.isArray(args)) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `@${config.name} args must be an object with argument names as keys.`,\n      );\n    this.args = (0, _definition.defineArguments)(args);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLDirective';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: (0, _definition.argsToArgsConfig)(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode,\n    };\n  }\n\n  toString() {\n    return '@' + this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLDirective = GraphQLDirective;\n\n/**\n * Used to conditionally include fields or fragments.\n */\nconst GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description:\n    'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [\n    _directiveLocation.DirectiveLocation.FIELD,\n    _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,\n    _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Included when true.',\n    },\n  },\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexports.GraphQLIncludeDirective = GraphQLIncludeDirective;\nconst GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description:\n    'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [\n    _directiveLocation.DirectiveLocation.FIELD,\n    _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,\n    _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Skipped when true.',\n    },\n  },\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexports.GraphQLSkipDirective = GraphQLSkipDirective;\nconst DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexports.DEFAULT_DEPRECATION_REASON = DEFAULT_DEPRECATION_REASON;\nconst GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [\n    _directiveLocation.DirectiveLocation.FIELD_DEFINITION,\n    _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION,\n    _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION,\n    _directiveLocation.DirectiveLocation.ENUM_VALUE,\n  ],\n  args: {\n    reason: {\n      type: _scalars.GraphQLString,\n      description:\n        'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON,\n    },\n  },\n});\n/**\n * Used to provide a URL for specifying the behavior of custom scalar definitions.\n */\n\nexports.GraphQLDeprecatedDirective = GraphQLDeprecatedDirective;\nconst GraphQLSpecifiedByDirective = new GraphQLDirective({\n  name: 'specifiedBy',\n  description: 'Exposes a URL that specifies the behavior of this scalar.',\n  locations: [_directiveLocation.DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      description: 'The URL that specifies the behavior of this scalar.',\n    },\n  },\n});\n/**\n * The full list of specified directives.\n */\n\nexports.GraphQLSpecifiedByDirective = GraphQLSpecifiedByDirective;\nconst specifiedDirectives = Object.freeze([\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n  GraphQLDeprecatedDirective,\n  GraphQLSpecifiedByDirective,\n]);\nexports.specifiedDirectives = specifiedDirectives;\n\nfunction isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(({ name }) => name === directive.name);\n}\n"]},"metadata":{},"sourceType":"script"}